version: '3.7'

networks:
  laravel:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: laravel-nginx
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./Docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  php:
    build:
      context: ./Docker/php
      dockerfile: Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
        PUID: ${UID}
    container_name: laravel-backend
    env_file:
      - .env
    volumes:
      - ./src:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - laravel

  phpunit:
    image: php:${PHP_CLI_VERSION}
    container_name: laravel-phpunit
    env_file:
      - .env
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: vendor/bin/phpunit
    networks:
      - laravel

  npm:
    image: node:${NODE_VERSION}
    container_name: laravel-npm
    env_file:
      - .env
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

  artisan:
    build:
      context: ./Docker/php
      dockerfile: Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
    container_name: laravel-artisan
    env_file:
      - .env
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['/var/www/html/artisan']
    networks:
      - laravel

  mysql:
    image: mysql:8
    container_name: laravel-mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - laravel-data:/var/lib/mysql
    networks:
      - laravel

volumes:
  laravel-data:
